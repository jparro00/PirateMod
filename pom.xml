<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--Hello! You'll basically should only need to change these names and the steam path (just below)-->
    <!--The author name(s) as they appear in MTS and any other comments are in your ModTheSpire.json-->
    <groupId>piratemod</groupId>
    <artifactId>PirateMod</artifactId> <!--Keep a note of this one: this is the ID used in the "auto add cards" method-->
    <name>The Abyssal</name>
    <version>1.14.1</version>
    <description>Adds The Abyssal as a new playable character.</description>

    <distributionManagement>
        <repository>
            <uniqueVersion>false</uniqueVersion>
            <id>pirate</id>
            <name>Pirate Repository</name>
            <url>file://C:/repo/maven2</url>
            <layout>default</layout>
        </repository>
    </distributionManagement>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <SlayTheSpire.version>12-18-2022</SlayTheSpire.version>
        <ModTheSpire.version>3.8.0</ModTheSpire.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.dependency.ant-contrib.ant-contrib.jar.path>${settings.localRepository}/ant-contrib/ant-contrib/1.0b3/ant-contrib-1.0b3.jar</maven.dependency.ant-contrib.ant-contrib.jar.path>
        <Steam.path>C:\Program Files (x86)\Steam\steamapps</Steam.path>
        <mod.dir>C:\Program Files (x86)\Steam\steamapps\common\SlayTheSpire\TheAbyssal</mod.dir>
        <git.dir>C:\Users\jparr\Documents\STS Mods\ThePirate\ThePirate\thePirate</git.dir>
        <last.commit.hash>29c291141f6ebcdad089b2aac43fd69e050073f1</last.commit.hash>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.megacrit.cardcrawl</groupId>
            <artifactId>slaythespire</artifactId>
            <version>${SlayTheSpire.version}</version>
            <scope>system</scope>
            <systemPath>${Steam.path}/common/SlayTheSpire/desktop-1.0.jar</systemPath>
            <!--<systemPath>${basedir}/../lib/desktop-1.0.jar</systemPath>-->
        </dependency>
        <dependency>
            <groupId>com.evacipated.cardcrawl</groupId>
            <artifactId>modthespire</artifactId>
            <version>${ModTheSpire.version}</version>
            <scope>system</scope>
            <systemPath>${Steam.path}/workshop/content/646570/1605060445/ModTheSpire.jar</systemPath>
            <!--<systemPath>${basedir}/../lib/ModTheSpire.jar</systemPath>-->
        </dependency>
        <dependency>
            <groupId>basemod</groupId>
            <artifactId>basemod</artifactId>
            <version>5.0.0</version>
            <scope>system</scope>
            <systemPath>${Steam.path}/workshop/content/646570/1605833019/BaseMod.jar</systemPath>
            <!--<systemPath>${basedir}/../lib/BaseMod.jar</systemPath>-->
        </dependency>
        <dependency>
            <groupId>com.evacipated.cardcrawl.mod</groupId>
            <artifactId>StSLib</artifactId>
            <version>1.3.2</version>
            <scope>system</scope>
            <systemPath>${Steam.path}/workshop/content/646570/1609158507/StSLib.jar</systemPath>
            <!--<systemPath>${basedir}/../lib/StSLib.jar</systemPath>-->
        </dependency>
        <!-- Add ant-contrib as a dependency -->
        <dependency>
            <groupId>ant-contrib</groupId>
            <artifactId>ant-contrib</artifactId>
            <version>1.0b3</version> <!-- Use the appropriate version -->
        </dependency>
    </dependencies>


    <!-- This is how your code is packaged into the jar file-->
    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <excludes>
                        <exclude>**/*.psd</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <configuration>
                            <target>
                                <!-- This moves your mod into a common folder where all mods you make can go. -->
                                <copy file="target/${project.artifactId}.jar" tofile="${Steam.path}/common/SlayTheSpire/mods/${project.artifactId}.jar"/>
                                <copy file="target/${project.artifactId}.jar" tofile="${mod.dir}/content/${project.artifactId}.jar"/>

                                <!-- Generate Git log to a text file -->
                                <exec executable="cmd">
                                    <arg value="/c"/>
                                    <arg value="cd &quot;${git.dir}&quot; &amp;&amp; git log > &quot;${mod.dir}\gitlog.txt&quot;"/>
                                </exec>

                                <!-- Find and Replace all instances of "    " in gitlog.txt -->
                                <exec executable="powershell">
                                    <arg value="-Command"/>
                                    <arg value="(Get-Content '${mod.dir}\gitlog.txt') -replace '    ', '' | Set-Content '${mod.dir}\gitlog.txt'"/>
                                </exec>


                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <execution>
                        <id>my-execution</id>
                        <phase>install</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>cmd</executable>
                            <workingDirectory>${mod.dir}</workingDirectory>
                            <arguments>
                                <argument>/c</argument>
                                <argument>${git.dir}\extract_bug_lines.bat</argument>
                                <argument>${last.commit.hash}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.0.0</version>
                <executions>
                    <execution>
                        <phase>install</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <files>
                                <file>${mod.dir}/bug_lines.properties</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version> <!-- use an appropriate version -->
                <executions>
                    <execution>
                        <phase>deploy</phase> <!-- choose an appropriate phase -->
                        <configuration>
                            <target name="updateConfigJson" >
                                <taskdef resource="net/sf/antcontrib/antcontrib.properties">
                                    <classpath>
                                        <pathelement location="${maven.dependency.ant-contrib.ant-contrib.jar.path}" />
                                    </classpath>
                                </taskdef>

                                <echo>Starting updateConfigJson</echo>
                                <!-- Pass Maven properties to Ant properties -->
                                <property name="version" value="${project.version}" />
                                <property name="bug_lines" value="${bugLines}" />
                                <property name="balance_lines" value="${balanceLines}" />
                                <property name="localization_lines" value="${localizationLines}" />
                                <property name="uiqol_lines" value="${uiqolLines}" />
                                <loadfile property="configJsonContent" srcFile="${git.dir}/config.json"/>


                                <!-- Add major/minor/patch info -->
                                <script language="javascript"> <![CDATA[

                                var versionChange = true;  // Initialize the variable
                                var data = project.getProperty("configJsonContent");
                                var version = project.getProperty("version");
                                var regexPattern = new RegExp("\"changeNote\": \"\\[h1\\]\\w+( \\w+)* v" + version);

                                // Check if the content matches the regex pattern
                                if (regexPattern.test(data)) {
                                    versionChange = false; // Set the boolean variable to false if the content matches
                                }
                                project.setProperty("versionChange", versionChange);

                                if ( versionChange ){
                                  var version = project.getProperty("version");
                                  var note = "";
                                  if (/^\d+\.0\.0$/.test(version)) {
                                    note = "[h1]Major Release " + "v" + version + "[/h1]";
                                  } else if (/^\d+\.\d+\.0$/.test(version)) {
                                    note = "[h1]Minor Release " + "v" + version + "[/h1]";
                                  } else if (/^\d+\.\d+\.\d+$/.test(version)) {
                                    note = "[h1]Patch " + "v" + version + "[/h1]";
                                  }
                                  note = note + "\n\n";
                                  project.setProperty("change.note", note);

                                //<!-- Add bug_lines if they exist -->
                                  var lines = project.getProperty("bug_lines");
                                  var header = "Bug Fixes";
                                  var note = project.getProperty("change.note");
                                  if (lines != null && lines != "") {
                                    note += "[h2]" + header + ":[/h2]\n" + lines + "\n";
                                  }
                                  project.setProperty("change.note", note);

                                //<!-- Add Balance_lines if they exist -->
                                  var lines = project.getProperty("balance_lines");
                                  var header = "Balance Changes";
                                  var note = project.getProperty("change.note");
                                  if (lines != null && lines != "") {
                                    note += "[h2]" + header + ":[/h2]\n" + lines + "\n";
                                  }
                                  project.setProperty("change.note", note);

                                //<!-- Add localization_lines if they exist -->
                                  var lines = project.getProperty("localization_lines");
                                  var header = "Localization";
                                  var note = project.getProperty("change.note");
                                  if (lines != null && lines != "") {
                                    note += "[h2]" + header + ":[/h2]\n" + lines + "\n";
                                  }
                                  project.setProperty("change.note", note);

                                //<!-- Add uiqol_lines if they exist -->
                                  var lines = project.getProperty("uiqol_lines");
                                  var header = "UI/QoL Enhancements";
                                  var note = project.getProperty("change.note");
                                  if (lines != null && lines != "") {
                                    note += "[h2]" + header + ":[/h2]\n" + lines + "\n";
                                  }
                                  project.setProperty("change.note", note);

                                }

                                ]]></script>

                                <if>
                                    <equals arg1="${versionChange}" arg2="true"/>
                                    <then>
                                        <replaceregexp file="${git.dir}/config.json"
                                                       match="(&quot;changeNote&quot;:\s*&quot;)((?:\\.|[^&quot;\\])*)(&quot;)"
                                                       replace="\1${change.note}\3"
                                                       flags="g"/>

                                        <copy file="${git.dir}/DeployToSteam.bat" tofile="${mod.dir}/DeployToSteam.bat"/>
                                        <copy file="${git.dir}/config.json" tofile="${mod.dir}/config.json"/>

                                        <!-- Open Abyssal mod folder in Windows Explorer -->
                                        <exec executable="explorer">
                                            <arg value="${mod.dir}"/>
                                        </exec>
                                    </then>
                                </if>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>ModTheSpire.json</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>ModTheSpire.json</include>
                </includes>
            </resource>
        </resources>
    </build>
</project>
